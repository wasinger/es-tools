name: Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: [8.0, 8.3, 8.4]
        es-version: [6.8.5]
    
    env:
      ES_VERSION: ${{ matrix.es-version }}

    services:
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:${{ matrix.es-version }}
        ports:
          - 9200:9200
        options: --health-cmd="curl http://localhost:9200/_cluster/health" -e "discovery.type=single-node" -e "xpack.security.enabled=false"
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

#    - name: Setup Java
#      uses: actions/setup-java@v3
#      with:
#        distribution: 'temurin'
#        java-version: '8'

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite
        coverage: none
        
    - name: Get Composer cache directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache Composer packages
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-php-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-${{ matrix.php-version }}-
          
    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-progress --no-suggest

#    - name: Download and start Elasticsearch
#      run: |
#        wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-${ES_VERSION}.tar.gz
#        tar -xzf elasticsearch-${ES_VERSION}.tar.gz
#        echo "discovery.type: single-node" >> elasticsearch-${ES_VERSION}/config/elasticsearch.yml
#        echo "xpack.security.enabled: false" >> elasticsearch-${ES_VERSION}/config/elasticsearch.yml
#        echo "index.refresh_interval: 1s" >> elasticsearch-${ES_VERSION}/config/elasticsearch.yml
#        echo "network.host: 0.0.0.0" >> elasticsearch-${ES_VERSION}/config/elasticsearch.yml
#        ES_JAVA_OPTS="-Xms512m -Xmx512m" ./elasticsearch-${ES_VERSION}/bin/elasticsearch -d
#        #        # Non-root Benutzer erstellen und Berechtigungen setzen
#        #        sudo useradd -m elasticsearch
#        #        sudo chown -R elasticsearch:elasticsearch elasticsearch-${ES_VERSION}/
#        #        # Elasticsearch als non-root Benutzer starten
#        #        echo "Starting Elasticsearch as elasticsearch user..."
#        #        sudo -u elasticsearch ES_JAVA_OPTS="-Xms512m -Xmx512m" nohup ./elasticsearch-${ES_VERSION}/bin/elasticsearch > elasticsearch.log 2>&1 &
#        echo "Elasticsearch started"

#    - name: Configure sysctl limits
#      run: |
#        sudo swapoff -a
#        sudo sysctl -w vm.swappiness=1
#        sudo sysctl -w fs.file-max=262144
#        sudo sysctl -w vm.max_map_count=262144

#    - name: Runs Elasticsearch
#      uses: elastic/elastic-github-actions/elasticsearch@master
#      with:
#        stack-version: ${{ matrix.es-version }}
#        security-enabled: false

    - name: Install Elasticsearch PHP client
      run: composer require elasticsearch/elasticsearch:^${ES_VERSION:0:1} --no-interaction --prefer-dist

    - name: Wait for Elasticsearch
      run: |
        echo "Waiting for Elasticsearch to start..."
        timeout 120 bash -c 'until curl -s http://localhost:9200 > /dev/null; do 
          echo "Still waiting for Elasticsearch..."
          sleep 5
        done'
        echo "Elasticsearch is ready!"
        curl -s http://localhost:9200/_cluster/health

    - name: Run tests
      run: vendor/bin/phpunit

